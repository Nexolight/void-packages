#! /bin/sh


CMDLINE="ro quiet root=/dev/mapper/dmroot console=hvc0"

prefix="/usr"
exec_prefix="/usr"
datarootdir="/usr/share"
. "$pkgdatadir/grub-mkconfig_lib"
export TEXTDOMAIN=grub
export TEXTDOMAINDIR="${datarootdir}/locale"

CLASS="--class gnu-linux --class os --class qubes"

AVAILABLE_KERNELS=""
for FILE in /boot/config*; do
        if grep -q "CONFIG_TRANSPARENT_HUGEPAGE_MADVISE=y" $FILE; then
		AVAILABLE_KERNELS="$AVAILABLE_KERNELS$(echo "$FILE" | cut -d '-' -f2)\n"
	fi
done


# loop-AES arranges things so that /dev/loop/X can be our root device, but
# the initrds that Linux uses don't like that.
case ${GRUB_DEVICE} in
  /dev/loop/*|/dev/loop[0-9])
    GRUB_DEVICE=`losetup ${GRUB_DEVICE} | sed -e "s/^[^(]*(\([^)]\+\)).*/\1/"`
  ;;
esac

# btrfs may reside on multiple devices. We cannot pass them as value of root= parameter
# and mounting btrfs requires user space scanning, so force UUID in this case.
if [ "x${GRUB_DEVICE_UUID}" = "x" ] || [ "x${GRUB_DISABLE_LINUX_UUID}" = "xtrue" ] \
    || ! test -e "/dev/disk/by-uuid/${GRUB_DEVICE_UUID}" \
    || ( test -e "${GRUB_DEVICE}" && uses_abstraction "${GRUB_DEVICE}" lvm ); then
  LINUX_ROOT_DEVICE=${GRUB_DEVICE}
else
  LINUX_ROOT_DEVICE=UUID=${GRUB_DEVICE_UUID}
fi

case x"$GRUB_FS" in
    xbtrfs)
        rootsubvol="`make_system_path_relative_to_its_root /`"
        rootsubvol="${rootsubvol#/}"
        if [ "x${rootsubvol}" != x ]; then
            GRUB_CMDLINE_LINUX="rootflags=subvol=${rootsubvol} ${GRUB_CMDLINE_LINUX}"
        fi;;
    xzfs)
        rpool=`${grub_probe} --device ${GRUB_DEVICE} --target=fs_label 2>/dev/null || true`
        bootfs="`make_system_path_relative_to_its_root / | sed -e "s,@$,,"`"
        if [ -z "${rpool}" ]; then
                rpool=$(zfs list -Ho name -t filesystem | grep -m1 "${bootfs}$" | sed 's/\/.*//')
        fi
        LINUX_ROOT_DEVICE="ZFS=${rpool}${bootfs}"
        ;;
esac


SORTED_KERNELS=$(echo "$AVAILABLE_KERNELS" | sort -V -r | tee /tmp/test.log)
BOOT_DEVICE_ID="$(grub_get_device_id "${GRUB_DEVICE}")"


menuentry(){
KERNEL_VERSION=$1
cat << EOF
menuentry "QubesVM linux-$KERNEL_VERSION" $CLASS{
	insmod gzio
	insmod part_gpt
	insmod btrfs

	#set gfxpayload=keep
        
	if [ x$feature_platform_search_hint = xy ]; then
		search --no-floppy --fs-uuid --set=root $BOOT_DEVICE_ID
	else
		search --no-floppy --fs-uuid --set=root $BOOT_DEVICE_ID
	fi


	echo "Loading linux-$KERNEL_VERSION"
        linux /boot/vmlinuz-$KERNEL_VERSION $CMDLINE
        echo "Loading linux-$KERNEL_VERSION"
        initrd /boot/initramfs-$KERNEL_VERSION.img
}
EOF
}


MOST_RECENT_KERNEL=$(echo "$SORTED_KERNELS" | head -n1)
menuentry "$MOST_RECENT_KERNEL"

echo "submenu \"QubesVM (all kernels)\" {"
for KERNEL_VERSION in $SORTED_KERNELS; do
	menuentry "$KERNEL_VERSION"
done
echo "}"
