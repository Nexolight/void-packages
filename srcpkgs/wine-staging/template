# Template file for 'wine-staging'
pkgname=wine-staging
version=4.2
revision=1
build_style=gnu-configure
configure_args="--without-gstreamer --prefix=/usr --libdir=/usr/lib --with-xattr"
short_desc="Run Microsoft Windows applications"
maintainer="Nexolight <snow.dream.ch@gmail.com>"
license="LGPL-2.1"
homepage="http://www.winehq.org/"
distfiles="https://dl.winehq.org/wine/source/${version%.*}.x/wine-${version}.tar.xz 
https://github.com/${pkgname}/${pkgname}/archive/v${version}.tar.gz"
checksum="a1d141f5f8dabb51475f21f90c63b6521c233fcf34ebcbe311f9c0eda5c05bfb 011f58ceb9f45a7f0c067052b4ea5c79a04af30112ba30a96c49d2f09447ccd8"
wrksrc=wine-${version}
replaces="wine>=0"

nopie_files="/usr/bin/wine64 /usr/bin/wine /usr/bin/winetricks /usr/bin/widl /usr/bin/winebuild /usr/bin/wineserver /usr/bin/winedump /usr/bin/winegcc /usr/bin/wmc /usr/bin/wrc"

lib32mode=full
archs="i686 x86_64"
case "$XBPS_TARGET_MACHINE" in
x86_64*)
	configure_args+=" --enable-win64"
esac

hostmakedepends="pkg-config flex prelink"
makedepends="gettext-devel lcms2-devel zlib-devel ncurses-devel
 glu-devel libSM-devel libXext-devel libX11-devel libXpm-devel
 libXinerama-devel libXcomposite-devel libXmu-devel libXxf86vm-devel
 libXcursor-devel libXrandr-devel libXdamage-devel libXi-devel
 libldap-devel alsa-lib-devel libgphoto2-devel libxml2-devel
 libxslt-devel freetype-devel pulseaudio-devel
 mpg123-devel libgsm-devel libopenal-devel giflib-devel libpng-devel
 v4l-utils-devel fontconfig-devel gnutls-devel dbus-devel sane-devel
 libpcap-devel cups-devel dbus-devel ocl-icd-devel vulkan-loader glib-devel git
 libtxc_dxtn libva automake"

depends="libXi libXinerama libXcomposite libXcursor libOSMesa
 desktop-file-utils hicolor-icon-theme liberation-fonts-ttf
 gnutls libpulseaudio libtxc_dxtn libva libgphoto2"


if [ "$enable_pba" == "yes" ]; then
	makedepends+=" git"
fi

pre_configure() {
	if [ ! -e ../${pkgname}-${version}/staging/wine ]; then
		ln -s ../../${pkgname}-${version} ../${pkgname}-${version}/staging/wine
	fi

	../${pkgname}-${version}/patches/patchinstall.sh DESTDIR=./ --all
	
	sed -i '/libdir=/s/lib64/lib/' configure
}

post_install() {
	# Font aliasing settings for Win32 applications
	install -d ${DESTDIR}/etc/fonts/conf.{avail,d}
	install -m644 ${FILESDIR}/30-win32-aliases.conf ${DESTDIR}/etc/fonts/conf.avail
	ln -s ../conf.avail/30-win32-aliases.conf ${DESTDIR}/etc/fonts/conf.d/30-win32-aliases.conf
}

libwine-staging_package() {
	lib32mode=full
	short_desc+=" - Runtime library"
	provides="libwine-${version}_${revision}"
	replaces="libwine-unstable>=0 libwine>=0 libwine-staging>=0"
	pkg_install() {
		vmove "usr/lib/*.so.*"
		vmove usr/lib/wine
	}
}
wine-staging-devel_package() {
	depends="libwine-staging-${version}_${revision} libwine-devel>=0"
	short_desc+=" - development files"
	provides="libwine-devel-${version}_${revision}"
	replaces="libwine-unstable-devel>=0 libwine-devel>=0 libwine-staging-devel>=0"
	pkg_install() {
		vmove usr/include
		vmove "usr/lib/*.so"
	}
}
